
clean-pycheck:
	@echo ""
	@printf "$(FORMATBLUE)$(FORMATBOLD)---> Cleaning Pycheck installation <---$(FORMATRESET)\n"
	@echo ""
	$(NPM) global remove @pycheck/cli
	$(NPM) global remove @pycheck/ui
	rm -Rf yarn.lock
	rm -Rf package.json
	rm -Rf node_modules
.PHONY: clean-pycheck

install-pycheck:
	@echo ""
	@printf "$(FORMATBLUE)$(FORMATBOLD)---> Installing Pycheck <---$(FORMATRESET)\n"
	@echo ""
	$(NPM) global add @pycheck/cli
	$(NPM) global add @pycheck/ui
.PHONY: install-pycheck

check:
	@echo ""
	@printf "$(FORMATBLUE)$(FORMATBOLD)---> Run the manage check command <---$(FORMATRESET)\n"
	@echo ""
	$(DJANGO_MANAGE) check
.PHONY: check

black:
	@echo ""
	@printf "$(FORMATBLUE)$(FORMATBOLD)---> Run black in write mode <---$(FORMATRESET)\n"
	@echo ""
	$(BLACK) --extend-exclude='/*/migrations/*|setup.py' .
.PHONY: black

black-dry:
	@echo ""
	@printf "$(FORMATBLUE)$(FORMATBOLD)---> Run black in check only mode <---$(FORMATRESET)\n"
	@echo ""
	$(BLACK) --extend-exclude='/*/migrations/*|setup.py' --check .
.PHONY: black-dry

pycheck:
	@echo ""
	@printf "$(FORMATBLUE)$(FORMATBOLD)---> Pycheck <---$(FORMATRESET)\n"
	@echo ""
	pycheck --django
.PHONY: pycheck

flake:
	@echo ""
	@printf "$(FORMATBLUE)$(FORMATBOLD)---> Flake <---$(FORMATRESET)\n"
	@echo ""
	$(FLAKE) --statistics --show-source $(DJANGOPROJECT_DIR) apps/ skii/ tests/
.PHONY: flake

quality: check check-migrations flake black-dry pycheck
	@echo ""
	@echo "Running quality checks"
	@echo ""
.PHONY: quality

shell_plus:
	@echo ""
	@printf "$(FORMATBLUE)$(FORMATBOLD)---> Open a Django shell plus <---$(FORMATRESET)\n"
	@echo ""
	$(DJANGO_MANAGE) shell_plus  --settings=${DJANGO_SETTINGS}
.PHONY: shell_plus

ci: clean install quality test
	@echo ""
	@echo "Running install (venv+pip+migrate) + quality (check/check-migrations/pycheck(flake8/black/pycheck) + unittest to reproduce a usual continuous integration builder process"
	@echo ""
.PHONY: ci
