{"register_save": {"lang": "python", "funcdef": "def register_save(\n\trequest: HttpRequest,\n\tdata: RegisterFormContract\n)", "description": "Register a user from a registration form", "long_description": "Endpoint url: /api/account/register", "example": {"code": "# example of valid payload\n{\n    \"name\": \"John Doe\",\n    \"email\": \"mymail@example.com\",\n    \"password1\": \"xxxzzzxxx\",\n    \"password2\": \"xxxzzzxxx\",\n}\n\n# example of form error payload return with a 422 status code\n{\n    \"errors\": {\n        'password2': [\n            {\n                'message': 'The two password fields didn\u2019t match.',\n                'code': 'password_mismatch'\n            }\n        ]\n    }\n}", "is_executable": false, "description": ""}, "params": {"request": {"description": "the django http request object", "type": "HttpRequest", "default": null}, "data": {"description": "the form json payload", "type": "RegisterFormContract", "default": null}}, "raises": [], "returns": {"description": "an http response", "type": "HttpResponse"}}, "activate_save": {"lang": "python", "funcdef": "def activate_save(\n\trequest: HttpRequest,\n\ttoken: str\n) -> Tuple[int, None | SkiiMsgContract]", "description": "Activate a user from a token", "long_description": "Endpoint url: /api/account/activate/{token}<br /><br />User has clicked on link in an email with an activation token,     and we activate the user if the token is valid", "example": {"code": "# example of an activation refused with a 401 http status code\n{\n    \"message\": \"Account activation refused\"\n}", "is_executable": false, "description": ""}, "params": {"request": {"description": "the django http request object", "type": "HttpRequest", "default": null}, "token": {"description": "the token", "type": "str", "default": null}}, "raises": [], "returns": {"description": "a 204 empty or a 401 with a message if         the token is invalid", "type": "Tuple[int, None | MsgResponseContract]"}}, "authlogin": {"lang": "python", "funcdef": "def authlogin(\n\trequest: HttpRequest,\n\tdata: LoginFormContract\n) -> Tuple[int, None | FormInvalidResponseContract | SkiiMsgContract]", "description": "Login a user from a username and password payload", "long_description": "Endpoint url: /api/account/login", "example": null, "params": {"request": {"description": "the django http request object", "type": "HttpRequest", "default": null}, "data": {"description": "the username and password payload", "type": "LoginFormContract", "default": null}}, "raises": [], "returns": {"description": "the http status code and the data payload", "type": "Tuple[int, None | FormInvalidResponseContract | MsgResponseContract]"}}, "authlogout": {"lang": "python", "funcdef": "def authlogout(\n\trequest: HttpRequest\n) -> Tuple[int, None]", "description": "Logout a user", "long_description": "Endpoint url: /api/account/logout", "example": null, "params": {"request": {"description": "the django http request object", "type": "HttpRequest", "default": null}}, "raises": [], "returns": {"description": "the http status code and None", "type": "Tuple[int, None]"}}, "global_state": {"lang": "python", "funcdef": "def global_state(\n\trequest: HttpRequest\n) -> Tuple[int, StateContract]", "description": "Returns info on user state and set a csrf token", "long_description": "Endpoint url: /api/account/state", "example": null, "params": {"request": {"description": "the django http request object", "type": "HttpRequest", "default": null}}, "raises": [], "returns": {"description": "the http status code and the data payload", "type": "Tuple[int, StateContract]"}}}